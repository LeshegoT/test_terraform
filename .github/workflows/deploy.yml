name: Flyway Migrate

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'API/src/StellarPath.API/db/migrations/**'

jobs:
  migrate:
    name: Run Flyway Migrations
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::574836245203:role/GitHubActionsOIDCRole
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: af-south-1
      
      - name: Verify AWS credentials
        run: |
                aws sts get-caller-identity
                aws s3 ls s3://stellar-path-s3-bucket/ || echo "Cannot list bucket contents"
                  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
              cd terraform
              terraform init
        env:
          AWS_REGION: af-south-1

      - name: Debug - Print Terraform State
        run: |
                  cd terraform
                  cat terraform.tfstate

      - name: Get Terraform Outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: terraform

      - name: Print Terraform Outputs
        run: |
          echo "RDS Endpoint: ${{ steps.tf-outputs.outputs.rds_endpoint }}"
          echo "ecr_repository_url: ${{ steps.tf-outputs.outputs.ecr_repository_url }}"
          echo "ecs_cluster_name: ${{ steps.tf-outputs.outputs.ecs_cluster_name }}"
          echo "ecs_service_name: ${{ steps.tf-outputs.outputs.ecs_service_name }}"
          
      - name: Install PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
      - name: Run Flyway validate and migrate
        uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://${{ steps.tf-outputs.outputs.rds_endpoint }}/stellarpath_db
          user: ${{ secrets.DATABASE_USERNAME }}
          password: ${{ secrets.DATABASE_PASSWORD }}
          locations: filesystem:API/src/StellarPath.API/db/migrations
